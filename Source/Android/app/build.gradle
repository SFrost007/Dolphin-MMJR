apply plugin: 'com.android.application'

android {
    compileSdkVersion 32
    ndkVersion "23.0.7599858"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        // This is important as it will run lint but not abort on error
        // Lint has some overly obnoxious "errors" that should really be warnings
        abortOnError false

        //Uncomment disable lines for test builds...
        //disable 'MissingTranslation'
        //disable 'ExtraTranslation'
    }

    defaultConfig {
        // TODO If this is ever modified, change application_id in strings.xml
        applicationId "org.mm.jrwithreplugbutton"
        minSdkVersion 24
        targetSdkVersion 28

        versionCode(getBuildVersionCode())

        versionName "${getVersion()}"
    }

    signingConfigs {
        release {
            /*keyAlias 'dolphin-release-key'
            keyPassword 'zhangwei'
            storeFile file('D:/Android/android-sign-key/dolphin-release-key.jks')
            storePassword 'zhangwei'*/
        }
    }

    // Define build types, which are orthogonal to product flavors.
    buildTypes {
        // Signed by release key, allowing for upload to Play Store.
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        // Signed by debug key disallowing distribution on Play Store.
        // Attaches 'debug' suffix to version and package name, allowing installation alongside the release build.
        debug {
            // TODO If this is ever modified, change application_id in debug/strings.xml
            applicationIdSuffix ".debug"
            versionNameSuffix '-debug'
            jniDebuggable true
            signingConfig signingConfigs.release
        }
    }

    externalNativeBuild {
        cmake {
            path "../../../CMakeLists.txt"
            version "3.18.1"
        }
    }

    defaultConfig {
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_static", "-DANDROID_PLATFORM=android-24",
                    "-DANDROID_TOOLCHAIN=clang", "-DANDROID_ARM_NEON=TRUE",
                    "-DCMAKE_CXX_FLAGS_RELEASE=-Ofast"
                abiFilters "arm64-v8a"
            }
        }
    }
}

dependencies {
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'com.google.android.material:material:1.5.0'
    // For loading huge screenshots from the disk.
    implementation 'com.squareup.picasso:picasso:2.71828'
    // For REST calls
    implementation 'com.android.volley:volley:1.2.1'
}

def getVersion() {
    def versionNumber = '11505'

    try {
        versionNumber = 'git describe --always --long'.execute([], project.rootDir).text
            .trim()
            .replaceAll(/(-0)?-[^-]+$/, "")
    } catch (Exception e) {
        logger.error('Cannot find git, defaulting to dummy version number')
    }

    return "1.0-11505"
}


def getBuildVersionCode() {
    try {
        def versionNumber = 'git rev-list --first-parent --count HEAD'.execute([], project.rootDir).text
            .trim()
        return Integer.valueOf(versionNumber);
    } catch (Exception e) {
        logger.error('Cannot find git, defaulting to dummy version number')
    }

    return 15808;
}
